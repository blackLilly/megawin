{"version":3,"sources":["Assets/images/bow-and-arrow-256x256.png","Components/Sidebar.js","Components/Header.js","Components/CustomSnakbar.js","Pages/Technology/TicketGen.js","App.js","index.js"],"names":["useStyles","makeStyles","list","width","fullList","Sidebar","props","anchor","classes","history","React","useState","right","state","setState","anchorEl","Boolean","toggleDrawer","open","event","type","key","IconButton","edge","className","menuButton","color","aria-label","onClick","Drawer","onClose","clsx","role","onKeyDown","List","map","text","index","ListItem","button","ListItemIcon","ListItemText","primary","Divider","withStyles","theme","root","palette","getContrastText","purple","backgroundColor","boxShadow","border","Button","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","title","flexGrow","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","spacing","mixins","toolbar","justifyContent","content","marginRight","contentShift","easeOut","enteringScreen","withRouter","setAnchorEl","Open","useTheme","isMobile","useMediaQuery","breakpoints","down","isTablet","CssBaseline","AppBar","position","appBarShift","style","Toolbar","disableRipple","disableFocusRipple","marginLeft","borderRadius","textTransform","fontSize","fontStyle","e","push","src","logo","transform","Typography","variant","fontFamily","fontWeight","menuTitle","PageURL","MenuItem","margin","Alert","elevation","severity","marginTop","CustomSnakbar","setOpen","Snackbar","autoHideDuration","reason","handleClose","msg","table","minWidth","textAlign","cssInput","maxWidth","customButton","background","height","TicketGen","addformRow","Nos","trim","nos","current","children","focus","snakOpen","snakMessage","DOP","dop","EMployee","employee","WName","wName","newRows","Rows","clearForm","OnChangeInput","target","id","value","onChangeInputNumber","isNaN","handleClick","newState","message","deleteRow","i","rowData","splice","generatePDF","doc","jsPDF","cells","tableCells","tableRowData","forEach","row","length","iStart","iEnd","Math","ceil","j","autoTable","startY","top","bottom","left","showHead","date","Date","split","dateStr","save","createRef","this","Grid","container","item","xs","sm","noValidate","autoComplete","TextField","label","ref","onChange","inputProps","maxLength","form","dir","startIcon","maxHeight","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","scope","Delete","name","Component","App","path","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0579e4c5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bow-and-arrow-256x256.9d8ea073.png\";","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport { IconButton } from '@material-ui/core';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nconst useStyles = makeStyles({\r\n    list: {\r\n        width: 250,\r\n    },\r\n    fullList: {\r\n        width: 'auto',\r\n    },\r\n});\r\n\r\n\r\nconst Sidebar = (props) => {\r\n    const classes = useStyles();\r\n    const { history } = props;\r\n    const [state, setState] = React.useState({\r\n        right: false,\r\n    });\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [Open, setOpen] = React.useState(Boolean(anchorEl));\r\n\r\n    const handleMenu = (event) => {\r\n        setState({ right: true });\r\n    };\r\n\r\n    const toggleDrawer = (anchor, open) => (event) => {\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n\r\n        setState({ ...state, [anchor]: open });\r\n    };\r\n\r\n    const list = (anchor) => (\r\n        <div\r\n            className={clsx(classes.list, {\r\n                [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n            })}\r\n            role=\"presentation\"\r\n            onClick={toggleDrawer(anchor, false)}\r\n            onKeyDown={toggleDrawer(anchor, false)}\r\n        >\r\n            <List>\r\n                {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n                    <ListItem button key={text}>\r\n                        <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                        <ListItemText primary={text} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n                    <ListItem button key={text}>\r\n                        <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                        <ListItemText primary={text} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n\r\n            <IconButton edge=\"start\"\r\n                className={classes.menuButton}\r\n                color=\"inherit\"\r\n                aria-label=\"menu\"\r\n                onClick={handleMenu}\r\n            >\r\n                <MenuIcon />\r\n            </IconButton>\r\n\r\n            <Drawer anchor={'right'} open={state['right']} onClose={toggleDrawer('right', false)}>\r\n                {list('right')}\r\n            </Drawer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport { createMuiTheme, withStyles, makeStyles, ThemeProvider, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Button, useMediaQuery } from '@material-ui/core';\r\n\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport logo from '../Assets/images/bow-and-arrow-256x256.png';\r\n\r\nimport { green, purple } from '@material-ui/core/colors';\r\nimport Sidebar from './Sidebar';\r\nconst drawerWidth = 240;\r\n\r\nconst ColorButton = withStyles((theme) => ({\r\n    root: {\r\n        color: theme.palette.getContrastText(purple[500]),\r\n        backgroundColor: 'black',\r\n        '&:hover': {\r\n            color: 'black !important',\r\n            backgroundColor: 'white',\r\n            boxShadow: '0px 0px 10px white',\r\n            border: 'none'\r\n        },\r\n    },\r\n}))(Button);\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginRight: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: 0,\r\n    },\r\n}));\r\n\r\nconst Header = (props) => {\r\n\r\n    const menuItems = [\r\n        {\r\n            menuTitle: 'Ticket Gen',\r\n            PageURL: '/ins-trans-ticket-generation'\r\n        },\r\n    ];\r\n\r\n    const classes = useStyles();\r\n    const { history } = props;\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [Open, setOpen] = React.useState(Boolean(anchorEl));\r\n    const theme = useTheme();\r\n    const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\r\n    const isTablet = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    const handleMenu = (event) => {\r\n        setOpen(true);\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMenuClick = (PageURL) => {\r\n        history.push(PageURL);\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"sticky\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: Open,\r\n                })}\r\n                style={{ backgroundColor: '#db4437' }}\r\n            >\r\n                <Toolbar>\r\n                    <Button disableRipple disableFocusRipple style={{\r\n                        color: 'white',\r\n                        marginLeft: -24,\r\n                        borderRadius: 0,\r\n                        textTransform: 'lowercase',\r\n                        fontSize: 'xx-large',\r\n                        fontStyle: 'italic'\r\n                    }}\r\n                        onClick={e => { history.push('/'); }}>\r\n                        <img src={logo} width={50} style={{ transform: '10px' }} />\r\n                        NAN TECH\r\n                        </Button>\r\n                    <Typography variant=\"h6\" className={classes.title}\r\n                        style={{ fontFamily: 'raleway', fontWeight: 400, fontStyle: 'normal' }}\r\n                    >\r\n                    </Typography>\r\n                    {isMobile || isTablet ?\r\n                        <div>\r\n                            <Sidebar />\r\n                            {/* <Menu\r\n                                id=\"menu-appbar\"\r\n                                anchorEl={anchorEl}\r\n                                anchorOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                keepMounted\r\n                                transformOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                open={open}\r\n                                onClose={() => setAnchorEl(null)}\r\n                            >\r\n                                <MenuItem onClick={() => handleMenuClick('/Login')}>Login</MenuItem>\r\n                                <MenuItem onClick={() => handleMenuClick('/Social')}>Social</MenuItem>\r\n                                <MenuItem onClick={() => handleMenuClick('/Literature')}>Literature</MenuItem>\r\n                                <MenuItem onClick={() => handleMenuClick('/Nature')}>Nature</MenuItem>\r\n                                <MenuItem onClick={() => handleMenuClick('/Politics')}>Politics</MenuItem>\r\n                            </Menu> */}\r\n                        </div>\r\n                        : <>\r\n                            {menuItems.map(MenuItem => {\r\n                                return (\r\n                                    <Button disableRipple className={classes.margin} onClick={() => handleMenuClick(MenuItem.PageURL)} >\r\n                                        <Typography style={{ color: 'white', fontSize: '14px', fontFamily: 'sohne, \"Helvetica Neue\", Helvetica, Arial, sans-serif' }} > {MenuItem.menuTitle}</Typography>\r\n                                    </Button>\r\n                                )\r\n                            })}\r\n\r\n                        </>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(Header);","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} severity={'error'} variant=\"filled\"  {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function CustomSnakbar(props) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {/* <Button variant=\"outlined\" onClick={handleClick}>\r\n                Open success snackbar\r\n      </Button> */}\r\n            <Snackbar open={props.open} autoHideDuration={3000} onClose={handleClose}>\r\n                <Alert onClose={props.handleClose} >\r\n                    {props.msg}\r\n                </Alert>\r\n            </Snackbar>\r\n        </div>\r\n    );\r\n}\r\n","import { React, Component, createRef } from 'react';\r\nimport {\r\n    TextField, Grid, Typography, Button,\r\n    TableContainer, TableBody, TableCell,\r\n    TableHead, TableRow, Paper, Table, IconButton,\r\n} from '@material-ui/core';\r\nimport { Delete } from '@material-ui/icons';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CustomSnakbar from '../../Components/CustomSnakbar';\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nconst classes = {\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n    root: {\r\n        '& .MuiTextFieldRoot': {\r\n            margin: '10px',\r\n            width: '25ch',\r\n        },\r\n        textAlign: 'center'\r\n    },\r\n    cssInput: {\r\n        minWidth: '150px',\r\n        maxWidth: '500px',\r\n        width: '100%',\r\n        margin: '14px',\r\n        textTransform: 'capitalize !important',\r\n    },\r\n    button: {\r\n        margin: '8px'\r\n    },\r\n    customButton: {\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: 'white',\r\n        height: 48,\r\n        padding: '0 30px',\r\n        margin: '10px 0px 0px 0px',\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    }\r\n}\r\n\r\nclass TicketGen extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Nos: '',\r\n            DOP: '',\r\n            EMployee: '',\r\n            WName: '',\r\n            Rows: [],\r\n            snakOpen: null,\r\n            snakMessage: null\r\n        };\r\n        this.nos = createRef();\r\n        this.dop = createRef();\r\n        this.employee = createRef();\r\n        this.wName = createRef();\r\n    }\r\n\r\n    addformRow = () => {\r\n        debugger;\r\n        if (this.state.Nos.trim() === '') {\r\n            this.nos.current.children[1].children[0].focus();\r\n            this.setState({\r\n                snakOpen: true,\r\n                snakMessage: 'Enter Number Of Items'\r\n            });\r\n        } else if (this.state.DOP.trim() === '') {\r\n            this.dop.current.children[1].children[0].focus();\r\n            this.setState({\r\n                snakOpen: true,\r\n                snakMessage: 'Enter Date Of Production'\r\n            });\r\n        } else if (this.state.EMployee.trim() === '') {\r\n            this.employee.current.children[1].children[0].focus();\r\n            this.setState({\r\n                snakOpen: true,\r\n                snakMessage: 'Enter Employee Name'\r\n            });\r\n        } else if (this.state.WName.trim() === '') {\r\n            this.wName.current.children[1].children[0].focus();\r\n            this.setState({\r\n                snakOpen: true,\r\n                snakMessage: 'Enter Work Name'\r\n            });\r\n        } else {\r\n            this.setState({\r\n                snakOpen: null,\r\n                snakMessage: null\r\n            });\r\n            let newRows = [];\r\n            newRows = this.state.Rows;\r\n            newRows.push({\r\n                Nos: this.state.Nos,\r\n                DOP: this.state.DOP,\r\n                EMployee: this.state.EMployee,\r\n                WName: this.state.WName\r\n            });\r\n            this.setState({\r\n                Rows: newRows,\r\n                Nos: '',\r\n                DOP: '',\r\n                EMployee: '',\r\n                WName: '',\r\n            })\r\n        }\r\n    }\r\n    clearForm = () => {\r\n        this.setState({\r\n            Rows: [],\r\n            Nos: '',\r\n            DOP: '',\r\n            EMployee: '',\r\n            WName: '',\r\n            snakOpen: null,\r\n            snakMessage: null\r\n        })\r\n    }\r\n    OnChangeInput = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value,\r\n            snakOpen: null,\r\n            snakMessage: null\r\n        });\r\n    }\r\n\r\n    onChangeInputNumber = (e) => {\r\n        if (!isNaN(e.target.value))\r\n            this.setState({\r\n                [e.target.id]: e.target.value,\r\n                snakOpen: null,\r\n                snakMessage: null\r\n            });\r\n    }\r\n\r\n    handleClick = (newState, message) => () => {\r\n        this.setState({ snakOpen: true, snakMessage: message });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ snakOpen: false });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.nos.current.children[1].children[0].focus();\r\n    }\r\n\r\n\r\n    deleteRow = (i) => {\r\n        try {\r\n            let rowData = this.state.Rows;\r\n            rowData.splice(i, 1);\r\n            this.setState({\r\n                Rows: rowData,\r\n            })\r\n        }\r\n        catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    generatePDF = () => {\r\n        try {\r\n            // initialize jsPDF\r\n            const doc = new jsPDF();\r\n\r\n            // define an empty array of rows\r\n            const cells = [];\r\n            let tableCells = [];\r\n\r\n            let rowData = this.state.Rows;\r\n            let tableRowData = [];\r\n\r\n            rowData.forEach((row) => {\r\n                for (let i = 0; i < row.Nos; ++i) {\r\n                    cells.push((i + 1) + \"-\" + row.DOP + \"-\" + row.EMployee + \"\\n\" + row.WName);\r\n                }\r\n            });\r\n\r\n            if (cells.length > 0) {\r\n\r\n                let iStart = 0;\r\n                let iEnd = 4;\r\n\r\n                for (let i = 0; i < Math.ceil(cells.length / 5); ++i) {\r\n                    for (let j = iStart; j <= iEnd; ++j) {\r\n                        tableCells.push(cells[j] ? cells[j] : '');\r\n                    }\r\n                    tableRowData.push(tableCells);\r\n                    tableCells = [];\r\n                    iEnd += 5;\r\n                    iStart += 5;\r\n                }\r\n            }\r\n\r\n            // startY is basically margin-top\r\n            doc.autoTable(\r\n                ['', '', '', '', ''],\r\n                tableRowData,\r\n                {\r\n                    startY: 0, margin: { top: 0, right: -1, bottom: -1, left: -1 }, theme: 'grid', showHead: 'never'\r\n                });\r\n            const date = Date().split(\" \");\r\n            // we use a date string to generate our filename.\r\n            const dateStr = date[0] + date[1] + date[2] + date[3] + date[4];\r\n            // we define the name of our PDF file.\r\n            doc.save(`report_${dateStr}.pdf`);\r\n        }\r\n        catch (e) { }\r\n    }\r\n\r\n    render() {\r\n        //Nos, DOP, EMployee, WName, rows\r\n        return (\r\n            <div style={{ flexGrow: 1, width: '98%' }}>\r\n\r\n                <CustomSnakbar\r\n                    open={this.state.snakOpen}\r\n                    msg={this.state.snakMessage}\r\n                    handleClose={this.handleClose}\r\n                />\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <section>\r\n                            <form id='frmDetails' style={classes.root} noValidate autoComplete=\"off\" >\r\n                                <Typography variant='h5' style={{ margin: '8px' }}>Ticket Generation</Typography>\r\n                                <TextField id=\"Nos\" label=\"Number Of Items\" variant=\"outlined\"\r\n                                    ref={this.nos}\r\n                                    onChange={this.onChangeInputNumber}\r\n                                    value={this.state.Nos}\r\n                                    style={classes.cssInput}\r\n                                    inputProps={{ maxLength: 3 }}\r\n                                />\r\n                                <TextField id=\"DOP\" label=\"Date Of Production\" variant=\"outlined\"\r\n                                    ref={this.dop}\r\n                                    onChange={this.OnChangeInput}\r\n                                    value={this.state.DOP}\r\n                                    style={classes.cssInput}\r\n                                    inputProps={{ maxLength: 6 }}\r\n                                />\r\n                                <TextField id=\"EMployee\" label=\"Employee Name\" variant=\"outlined\"\r\n                                    ref={this.employee}\r\n                                    onChange={this.OnChangeInput}\r\n                                    value={this.state.EMployee}\r\n                                    style={classes.cssInput} />\r\n                                <TextField id=\"WName\" label=\"Work Name\" variant=\"outlined\"\r\n                                    ref={this.wName}\r\n                                    onChange={this.OnChangeInput}\r\n                                    value={this.state.WName}\r\n                                    style={classes.cssInput} />\r\n                                <div>  <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                    style={classes.button}\r\n                                    onClick={this.clearForm}\r\n                                    form='frmDetails'>\r\n                                    Clear\r\n                        </Button>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        form='frmDetails'\r\n                                        dir='left'\r\n                                        startIcon={<SaveIcon />}\r\n                                        onClick={this.addformRow}\r\n                                        style={classes.button\r\n                                        }>\r\n                                        Add\r\n                        </Button>\r\n                                </div>\r\n                            </form>\r\n                        </section>\r\n                        <br />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <section style={{ marginTop: '10px' }}>\r\n                            <div style={{ width: '100%', maxHeight: '80vh' }}>\r\n                                <Typography variant='h5' style={{ margin: '8px' }}>List Of Items    </Typography>\r\n                                <TableContainer component={Paper} elevation={0} >\r\n                                    <Table style={classes.table} aria-label=\"simple table\">\r\n                                        <TableHead style={{ backgroundColor: '#ababab52' }}>\r\n                                            <TableRow>\r\n                                                <TableCell>No Of Items</TableCell>\r\n                                                <TableCell >Date Of Production</TableCell>\r\n                                                <TableCell >Employee Name</TableCell>\r\n                                                <TableCell >Item Name</TableCell>\r\n                                                <TableCell >Action</TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {this.state.Rows.map((row, i) => (\r\n                                                <TableRow key={row.name}  >\r\n                                                    <TableCell component=\"th\" scope=\"row\" >\r\n                                                        {row.Nos}\r\n                                                    </TableCell>\r\n                                                    <TableCell >{row.DOP}</TableCell>\r\n                                                    <TableCell >{row.EMployee}</TableCell>\r\n                                                    <TableCell >{row.WName}</TableCell>\r\n                                                    <TableCell >\r\n                                                        <IconButton title=\"Delete\"\r\n                                                            aria-label=\"delete\"\r\n                                                            className={classes.margin}\r\n                                                            onClick={() => this.deleteRow(i)}\r\n                                                        >\r\n                                                            <Delete fontSize=\"medium\" color=\"error\" />\r\n                                                        </IconButton>\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            ))}\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </div>\r\n                            <div id='genetepdf'>\r\n                                {this.state.Rows && this.state.Rows.length > 0 ? <Button style={classes.customButton} onClick={this.generatePDF}>Generate PDF</Button> : <></>}\r\n                            </div>\r\n                        </section>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TicketGen;","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch} from \"react-router-dom\";\r\nimport './App.css';\r\nimport Header from './Components/Header';\r\nimport TicketGen from \"./Pages/Technology/TicketGen\";\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter>\r\n        {/* Common Pages for All roles */}\r\n        <Header />\r\n        <Switch>\r\n          <Route path=\"/\" render={props => <TicketGen {...props}></TicketGen>} />\r\n        </Switch>\r\n        {/* <Footer /> */}\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}